buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.3'
    }
}

apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply from: "$rootDir/gradle/functional-test.gradle"

group = 'com.bmuschko'
version = '3.0'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile localGroovy()
    compile gradleApi()
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle IzPack plugin',
                   'Implementation-Version': version,
                   'Built-By': System.getProperty("user.name"),
                   'Built-Date': new Date(),
                   'Built-JDK': System.getProperty("java.version")
    }
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier 'groovydoc'
    from groovydoc.destinationDir
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives groovydocJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact groovydocJar

            pom {
                name = 'Gradle IzPack plugin'
                description = 'Gradle plugin that provides support for packaging applications for the Java platform via IzPack.'
                url = 'https://github.com/bmuschko/gradle-izpack-plugin'
                inceptionYear = '2012'

                scm {
                    url = 'https://github.com/bmuschko/gradle-izpack-plugin'
                    connection = 'scm:https://bmuschko@github.com/bmuschko/gradle-izpack-plugin.git'
                    developerConnection = 'scm:git://github.com/bmuschko/gradle-izpack-plugin.git'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'bmuschko'
                        name = 'Benjamin Muschko'
                        email = 'benjamin.muschko@gmail.com'
                    }
                }
            }
        }
    }
}

bintray {
    user = resolveProperty('BINTRAY_USER', 'bintrayUser')
    key = resolveProperty('BINTRAY_KEY', 'bintrayKey')
    publications = ['mavenJava']
    publish = true

    pkg {
        repo = 'gradle-plugins'
        name = 'com.bmuschko:gradle-izpack-plugin'
        desc = 'Gradle plugin that provides support for packaging applications for the Java platform via IzPack.'
        websiteUrl = "https://github.com/bmuschko/${project.name}"
        issueTrackerUrl = "https://github.com/bmuschko/${project.name}/issues"
        vcsUrl = "https://github.com/bmuschko/${project.name}.git"
        licenses = ['Apache-2.0']
        labels = ['gradle', 'packaging', 'distribution', 'installer']
        publicDownloadNumbers = true
        githubRepo = "bmuschko/${project.name}"
        githubReleaseNotesFile = 'RELEASE_NOTES.md'

        version {
            released  = new Date()
            vcsTag = "v$project.version"
            attributes = ['gradle-plugin': "com.bmuschko.izpack:${project.group}:${project.name}"]

            gpg {
                sign = true
                passphrase = resolveProperty('GPG_PASSPHRASE', 'gpgPassphrase')
            }
            mavenCentralSync {
                sync = true
                user = resolveProperty('MAVEN_CENTRAL_USER_TOKEN', 'mavenCentralUserToken')
                password = resolveProperty('MAVEN_CENTRAL_PASSWORD', 'mavenCentralPassword')
                close = '1'
            }
        }
    }
}

String resolveProperty(String envVarKey, String projectPropKey) {
    String propValue = System.getenv()[envVarKey]

    if(propValue) {
        return propValue
    }

    hasProperty(projectPropKey) ? getProperty(projectPropKey) : null
}